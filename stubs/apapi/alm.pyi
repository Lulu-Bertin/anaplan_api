from .basic_connection import BasicConnection as BasicConnection
from .utils import MIMEType as MIMEType, ModelOnlineStatus as ModelOnlineStatus
from requests import Response

class ALMConnection(BasicConnection):
    def change_status(self, model_id: str, status: ModelOnlineStatus) -> Response: ...
    def get_revisions(self, model_id: str) -> Response: ...
    def get_latest_revision(self, model_id: str) -> Response: ...
    def get_syncable_revisions(self, source_model_id: str, target_model_id: str) -> Response: ...
    def get_revision_models(self, model_id: str, revision_id: str) -> Response: ...
    def add_revision(self, model_id: str, name: str, description: str = '') -> Response: ...
    def start_revisions_comparison(self, source_model_id: str, source_revision_id: str, target_model_id: str, target_revision_id: str) -> Response: ...
    def get_revisions_comparison_status(self, model_id: str, task_id: str): ...
    def get_revisions_comparison_data(self, source_revision_id: str, target_model_id: str, target_revision_id: str) -> Response: ...
    def start_revisions_summary(self, source_model_id: str, source_revision_id: str, target_model_id: str, target_revision_id: str) -> Response: ...
    def get_revisions_summary_status(self, model_id: str, task_id: str): ...
    def get_revisions_summary_data(self, source_revision_id: str, target_model_id: str, target_revision_id: str) -> Response: ...
    def get_syncs(self, model_id: str) -> Response: ...
    def get_sync(self, model_id: str, sync_id: str) -> Response: ...
    def sync(self, source_model_id: str, source_revision_id: str, target_model_id: str, target_revision_id: str) -> Response: ...
